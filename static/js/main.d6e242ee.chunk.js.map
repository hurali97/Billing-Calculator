{"version":3,"sources":["Component/Table.js","Component/Unit.js","Component/Card.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["CustomTableCell","withStyles","theme","head","color","palette","common","white","body","fontSize","TableCell","sum","temp","OverallCost","CustomizedTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","total","map","row","parseInt","costpush","amount","quantity","push","_this2","classes","summary","react_default","a","createElement","Paper_default","className","root","style","height","Table_default","table","TableHead_default","backgroundColor","TableRow_default","align","TableBody_default","key","id","component","scope","item","unit","React","Component","width","marginTop","spacing","overflowX","minWidth","&:nth-of-type(odd)","background","default","units","value","label","OutlinedTextFields","state","handleChange","event","setState","target","console","log","TextField_default","select","onChange","onUnit","helperText","margin","variant","option","connect","dispatch","type","onItem","onQuantity","onAmount","onAdd","build","fluid","md","sm","xs","Card_default","border","CardContent_default","Typography_default","placeholder","Unit","InputProps","startAdornment","InputAdornment_default","position","Button_default","size","onClick","App","Helmet","name","content","Component_Card","show","Component_Table","onNewBill","Boolean","window","location","hostname","match","initialState","reducer","arguments","length","undefined","action","newState","objectSpread","document","getElementById","isNaN","concat","Math","random","store","createStore","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6e242ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 6,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 50,\r\n  \r\n  },\r\n  row: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(item , amount) {\r\n  id += 1;\r\n  return { id, item , amount};\r\n}\r\nlet sum=0;\r\nlet temp=0;\r\nlet OverallCost=[];\r\n\r\n\r\nclass  CustomizedTable extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n      \r\n    }\r\n\r\n  total=()=>{\r\n    OverallCost.map(row => (\r\n      sum+=parseInt(row)\r\n      \r\n    )\r\n    );\r\n    temp=sum;\r\n    sum=0;\r\n    OverallCost=[];\r\n    }\r\n\r\n    costpush=(amount,quantity)=>{\r\n      OverallCost.push((amount*quantity));\r\n      \r\n    }\r\n    \r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        const summary=this.props.summary;\r\n     \r\n     \r\n        return (\r\n            <Paper className={classes.root} style={{height: '80%'}}>\r\n              <Table className={classes.table}>\r\n                <TableHead style={{backgroundColor:'#00b5ad'}}>\r\n                  <TableRow>\r\n                    <CustomTableCell align='center'>Item</CustomTableCell>\r\n                    <CustomTableCell align='center'>Quantity</CustomTableCell>\r\n                    <CustomTableCell align='center'>Unit</CustomTableCell>\r\n                    <CustomTableCell align=\"center\">Unit Cost($)</CustomTableCell>\r\n                    <CustomTableCell align=\"center\">OverAll Cost($)</CustomTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {\r\n                    \r\n                    summary.map(row => (\r\n                    <TableRow className={classes.row} key={row.id}>\r\n                      <CustomTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                        {row.item}\r\n                        \r\n                      </CustomTableCell>\r\n                      <CustomTableCell align=\"center\">{row.quantity}</CustomTableCell>\r\n                      <CustomTableCell align=\"center\">{row.unit}</CustomTableCell>\r\n                      <CustomTableCell align=\"center\">{row.amount}</CustomTableCell>\r\n                      <CustomTableCell align=\"center\">{(row.amount*row.quantity)}</CustomTableCell>\r\n                      {\r\n                       this.costpush(row.amount,row.quantity)\r\n                      }\r\n                    </TableRow>\r\n                  ))\r\n                  }\r\n               \r\n                </TableBody>\r\n              </Table>\r\n              {\r\n                 this.total()\r\n              }\r\n              <h3>Total : {temp} </h3>\r\n           \r\n            </Paper>\r\n            \r\n          );\r\n    }\r\n   \r\n     \r\n \r\n}\r\n\r\nCustomizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nconst units = [\r\n  {\r\n    value: 'KG',\r\n    label: 'kg',\r\n  },\r\n  {\r\n    value: 'LITRES',\r\n    label: 'Lt',\r\n  },\r\n  {\r\n    value: 'none',\r\n    label: '--',\r\n  },\r\n \r\n];\r\n\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n    state = {\r\n   \r\n      unit: '',\r\n    };\r\n  \r\n    handleChange = (event) => {\r\n      this.setState({\r\n        unit: event.target.value,\r\n      });\r\nconsole.log(this.state.unit);\r\n    };\r\n  \r\n    render() {\r\n      \r\n      return (\r\n\r\n<TextField\r\n          id=\"unit\"\r\n          select\r\n          label=\"Unit\"\r\n         \r\n          value={this.props.unit}\r\n          onChange={this.props.onUnit}\r\n         \r\n          helperText=\"Please select A Unit From Above\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        >\r\n          {units.map(option => (\r\n            <option key={option.value} value={option.label}>\r\n              {option.label}\r\n             \r\n            </option>\r\n          ))}\r\n        </TextField>\r\n        );\r\n    }\r\n  }\r\n  \r\n  \r\nconst mapStateToProps = state => {\r\n    return {\r\n      unit: state.unit,\r\n    };\r\n  };\r\n  \r\n  const mapDispachToProps = dispatch => {\r\n    return {\r\n        onUnit: (event) => dispatch({ type: \"unit\",value:event.target.value }),\r\n    };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n  )(OutlinedTextFields);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { connect } from \"react-redux\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Unit from './Unit';\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 100,\r\n    },\r\n\r\n    title: {\r\n        fontSize: 18,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 50,\r\n    },\r\n\r\n};\r\n\r\n\r\nfunction SimpleCard(props) {\r\n\r\n    const { classes } = props;\r\n    return (\r\n\r\n\r\n        <Container fluid>\r\n\r\n            <Row>\r\n                <Col md={4} sm={1} xs={1}></Col>\r\n                <Col md={4} sm={10} xs={10}>\r\n\r\n\r\n                    <Card style={{\r\n                        marginTop: '20px', border: '1px solid darkgray',\r\n                        background: 'linear-gradient(to right, #9796f0,#fbc7d4)'\r\n                    }}>\r\n\r\n                        <CardContent>\r\n\r\n                            <div style={{ marginTop: '20px' }}>\r\n                                <Typography variant=\"h4\" >\r\n                                    Billing Calculator\r\n                                    </Typography>\r\n\r\n                                <div style={{ marginTop: '20px' }}>\r\n                                    <TextField\r\n                                        id=\"item\"\r\n                                        label=\"Item\"\r\n                                        placeholder=\"Item Name\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={props.onItem}\r\n                                    />\r\n\r\n                                    <br></br>\r\n                                    <Unit />\r\n                                    <br></br>\r\n                                    <TextField\r\n                                        id=\"quantity\"\r\n                                        label=\"Quantity\"\r\n                                        \r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={props.onQuantity}\r\n                                    />\r\n\r\n                                    <br></br>\r\n\r\n                                    <TextField\r\n                                        id=\"amount\"\r\n                                        label=\"Amount\"\r\n                                        placeholder=\"Amount Per Item\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={props.onAmount}\r\n                                        InputProps={{\r\n                                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                                        }}\r\n                                    />\r\n                                    <br></br>\r\n                                    <Button size=\"small\" style={{ marginTop: '2vh', backgroundColor: '#00b5ad', color: 'white' }} onClick={props.onAdd} variant=\"contained\"  >\r\n                                        Add\r\n                                       </Button>\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={4} sm={1} xs={1}></Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n//export default withStyles(styles)(SimpleCard);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        item: state.item,\r\n        amount: state.amount,\r\n        quantity: state.quantity,\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onItem: (event) => dispatch({ type: \"item\", value: event.target.value }),\r\n        onQuantity: (event) => dispatch({ type: \"quantity\", value: event.target.value }),\r\n        onAmount: (event) => dispatch({ type: \"amount\", value: event.target.value }),\r\n        onAdd: () => dispatch({ type: \"add\" }),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n)(SimpleCard);","import React from 'react';\r\nimport './App.css';\r\nimport { connect } from \"react-redux\";\r\nimport CustomizedTable from './Component/Table';\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport SimpleCard from './Component/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  render() {\r\n   \r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n\r\n        {/* <SimpleCard onItem={this.props.onItem} onAmount={this.props.onAmount} onAdd={this.props.onAdd} /> */}\r\n        <Helmet>\r\n        <title>Billing Calculator</title>\r\n        <meta name=\"description\" content=\"A Billing Calculator to help you with your calculations of groceries and other stuff\" />\r\n        <meta name=\"keywords\" content=\"billing-calculator,billing,grocery,calculator\" />\r\n      </Helmet>\r\n\r\n        <SimpleCard />\r\n\r\n\r\n\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={3} sm={1} xs={1}>\r\n            </Col>\r\n\r\n            <Col md={6} sm={10} xs={10}>\r\n              {(this.props.show === 'yes')\r\n                ? (\r\n                  <div>\r\n                  <CustomizedTable summary={this.props.summary} />\r\n                  <Button size=\"small\" style={{ marginTop: '2vh', backgroundColor: '#00b5ad', color: 'white' }} onClick={this.props.onNewBill} variant=\"contained\"  >\r\n                  New Bill\r\n                 </Button>\r\n                <br></br>\r\n                 </div>\r\n                )\r\n                : (this.props.show === 'none') ? <h3>Please Add Items, Quantity And Amount !</h3>\r\n                : (this.props.show === 'string') ? <h3>Please Input A Number In Amount/Quantity !</h3>\r\n                    : console.log(\"no\")\r\n              }\r\n            </Col>\r\n\r\n            <Col md={3} sm={1} xs={1}>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.show,\r\n    summary: state.summary,\r\n    \r\n      };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    onNewBill: () => dispatch({ type: \"bill\" }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n    item: '',\r\n    amount: 0,\r\n    quantity: 0,\r\n    unit: '',\r\n    show: '',\r\n    summary: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    const newState = { ...state };\r\n\r\n    if (action.type === 'item') {\r\n        newState.item = action.value;\r\n\r\n    }\r\n    if (action.type === 'quantity') {\r\n        newState.quantity = action.value;\r\n\r\n    }\r\n    if (action.type === 'unit') {\r\n        newState.unit = action.value;\r\n\r\n    }\r\n    if (action.type === 'amount') {\r\n        newState.amount = action.value;\r\n\r\n    }\r\n    if (action.type === 'bill') {\r\n        console.log(\"wow\")\r\n        return {\r\n\r\n            ...state,\r\n            item: '',\r\n            amount: 0,\r\n            show: '',\r\n            quantity: 0,\r\n            summary: [],\r\n            unit: ''\r\n        };\r\n\r\n    }\r\n    if (action.type === 'add') {\r\n\r\n        document.getElementById('item').value = \"\";\r\n        document.getElementById('amount').value = \"\";\r\n        document.getElementById('quantity').value = \"\";\r\n        if (isNaN(newState.amount) || isNaN(newState.quantity)) {\r\n            return {\r\n\r\n                ...state,\r\n                item: '',\r\n                amount: 0,\r\n                show: 'string',\r\n                quantity: 0,\r\n                unit: ''\r\n            };\r\n        }\r\n        else {\r\n            if (newState.item.length > 0 && newState.amount > 0 && newState.quantity > 0)\r\n                return {\r\n\r\n                    ...state,\r\n                    summary: state.summary.concat({\r\n                        id: Math.random(), item: state.item, quantity: state.quantity,\r\n                        unit: state.unit, amount: state.amount\r\n                    }),\r\n                    item: '',\r\n                    amount: 0,\r\n                    show: 'yes',\r\n                    quantity: 0,\r\n                    unit: ''\r\n                };\r\n        }\r\n\r\n        // && newState.summary.length <= 0\r\n\r\n        if ((newState.item.length <= 0 || newState.amount <= 0 || newState.quantity <= 0)) {\r\n            return {\r\n\r\n                ...state,\r\n                item: '',\r\n                amount: 0,\r\n                show: 'none',\r\n                quantity: 0,\r\n                unit: ''\r\n            };\r\n        }\r\n      \r\n\r\n    }\r\n\r\n\r\n\r\n    return newState;\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducer from './store/reducer';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst store = createStore(reducer);\r\nReactDOM.render(<Provider store={store}>\r\n     <Helmet>\r\n        <title>Billing Calculator</title>\r\n        <meta name=\"description\" content=\"A Billing Calculator to help you with your calculations of groceries and other stuff\" />\r\n        <meta name=\"keywords\" content=\"billing-calculator,billing,grocery,calculator\" />\r\n      </Helmet>\r\n<App />\r\n\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}