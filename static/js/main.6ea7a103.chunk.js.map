{"version":3,"sources":["Component/Table.js","Component/Card.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["CustomTableCell","withStyles","theme","head","color","palette","common","white","body","fontSize","TableCell","sum","temp","CustomizedTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","total","summary","map","row","parseInt","amount","classes","react_default","a","createElement","Paper_default","className","root","Table_default","table","TableHead_default","style","backgroundColor","TableRow_default","align","TableBody_default","key","id","component","scope","item","React","Component","width","marginTop","spacing","unit","overflowX","minWidth","&:nth-of-type(odd)","background","default","card","title","pos","marginBottom","build","md","sm","xs","Card_default","border","CardContent_default","Typography_default","variant","TextField_default","label","margin","onChange","onItem","onAmount","Button_default","size","onClick","onAdd","App","Component_Card","show","Component_Table","console","log","connect","state","dispatch","event","type","value","target","Boolean","window","location","hostname","match","initialState","summary_item","summary_amount","reducer","arguments","length","undefined","action","newState","objectSpread","document","getElementById","isNaN","concat","Math","random","store","createStore","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ea7a103.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 6,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 50,\r\n  },\r\n  row: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(item , amount) {\r\n  id += 1;\r\n  return { id, item , amount};\r\n}\r\nlet sum=0;\r\nlet temp=0;\r\n\r\nclass  CustomizedTable extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n      \r\n    }\r\n\r\n  total=()=>{\r\n    this.props.summary.map(row => (\r\n      sum+=parseInt(row.amount)\r\n    ));\r\ntemp=sum;\r\nsum=0;\r\n    }\r\n\r\n    render(){\r\n        const {classes}=this.props;\r\n        const summary=this.props.summary;\r\n      this.total();\r\n     \r\n        return (\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead style={{backgroundColor:'#00b5ad'}}>\r\n                  <TableRow>\r\n                    <CustomTableCell align='center'>Item</CustomTableCell>\r\n                    <CustomTableCell align=\"center\">Amount($)</CustomTableCell>\r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {\r\n                    \r\n                    summary.map(row => (\r\n                    <TableRow className={classes.row} key={row.id}>\r\n                      <CustomTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                        {row.item}\r\n                        \r\n                      </CustomTableCell>\r\n                      <CustomTableCell align=\"center\">{row.amount}</CustomTableCell>\r\n                \r\n                    </TableRow>\r\n                  ))\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <h3>Total : {temp} </h3>\r\n           \r\n            </Paper>\r\n            \r\n          );\r\n    }\r\n   \r\n     \r\n \r\n}\r\n\r\nCustomizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 100,\r\n    },\r\n\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 50,\r\n    },\r\n};\r\n\r\nfunction SimpleCard(props) {\r\n\r\n    const { classes } = props;\r\n    return (\r\n\r\n\r\n        <Container>\r\n\r\n            <Row>\r\n                <Col md={4} sm={1} xs={1}></Col>\r\n                <Col md={4} sm={10} xs={10}>\r\n\r\n\r\n                    <Card className={classes.card} style={{\r\n                        marginTop: '20px', border: '1px solid darkgray',\r\n                        background: 'linear-gradient(to right, #9796f0,#fbc7d4)'\r\n                    }}>\r\n\r\n                        <CardContent>\r\n\r\n                            <div style={{ marginTop: '20px' }}>\r\n                                <Typography variant=\"h3\" component=\"h2\">\r\n                                    Billing Calculator\r\n             </Typography>\r\n\r\n                                <div style={{ marginTop: '20px' }}>\r\n                                    <TextField\r\n                                        id=\"item\"\r\n                                        label=\"Item\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={props.onItem}\r\n                                    />\r\n\r\n                                    <br></br>\r\n                                    <TextField\r\n                                        id=\"amount\"\r\n                                        label=\"Amount\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={props.onAmount}\r\n\r\n                                    />\r\n                                    <br></br>\r\n                                    <Button size=\"small\" style={{ marginTop: '2vh', backgroundColor: '#00b5ad', color: 'white' }} onClick={props.onAdd} variant=\"contained\"  >\r\n                                        Add\r\n          </Button>\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={4} sm={1} xs={1}></Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleCard);","import React from 'react';\r\nimport './App.css';\r\nimport { connect } from \"react-redux\";\r\nimport CustomizedTable from './Component/Table';\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SimpleCard from './Component/Card'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    let that = this;\r\n    let sum = 0;\r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n\r\n<SimpleCard onItem={this.props.onItem} onAmount={this.props.onAmount} onAdd={this.props.onAdd}/>\r\n\r\n       \r\n    \r\n\r\n        <Container>\r\n          <Row>\r\n            <Col md={4} sm={1} xs={1}>\r\n            </Col>\r\n\r\n            <Col md={4} sm={10} xs={10}>\r\n              {(this.props.show==='yes')\r\n                ? (\r\n                  <CustomizedTable summary={this.props.summary} show={this.props.show}/>\r\n                )\r\n                :(this.props.show==='none')? <h3>Please Add Items And Amount !</h3>\r\n                :(this.props.show==='string')? <h3>Please Input A Number In Amount !</h3>\r\n                :console.log(\"no\")\r\n              }\r\n            </Col>\r\n\r\n            <Col md={4} sm={1} xs={1}>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    item: state.item,\r\n    amount: state.amount,\r\n    show: state.show,\r\n    summary: state.summary,\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    onItem: (event) => dispatch({ type: \"item\", value: event.target.value }),\r\n    onAmount: (event) => dispatch({ type: \"amount\", value: event.target.value }),\r\n    onAdd: () => dispatch({ type: \"add\" }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState={\r\n    item:'',\r\n    amount:0,\r\n    summary_item:[],\r\n    summary_amount:[],\r\n    show:'',\r\n    summary:[],\r\n};\r\n\r\nconst reducer=(state = initialState , action)=>{\r\n\r\n    const newState = { ...state };\r\n\r\n    if(action.type==='item'){\r\n        newState.item=action.value;\r\n     \r\n    }\r\n\r\n    if(action.type==='amount'){\r\n        newState.amount=action.value;\r\n      \r\n    }\r\n    if(action.type==='add'){\r\n \r\n        document.getElementById('item').value=\"\";\r\n        document.getElementById('amount').value=\"\";\r\n        if(isNaN(newState.amount)){\r\n            return {\r\n          \r\n                ...state,\r\n                item:'',\r\n                amount:0,\r\n                show:'string'\r\n              \r\n              };\r\n        }\r\n        else{\r\n        if(newState.item.length>0&&newState.amount>0)\r\n        return {\r\n        \r\n            ...state,\r\n            summary: state.summary.concat({ id: Math.random(), item: state.item , amount:state.amount }),\r\n            item:'',\r\n            amount:0,\r\n            show:'yes'\r\n          \r\n          };\r\n        }\r\n        \r\n          if((newState.item.length<=0||newState.amount<=0)&&newState.summary.length<=0)\r\n          return {\r\n          \r\n              ...state,\r\n              item:'',\r\n              amount:0,\r\n              show:'none'\r\n            \r\n            };\r\n\r\n    }\r\n  \r\n\r\n    return newState;\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducer from './store/reducer';\r\n\r\nconst store = createStore(reducer);\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}